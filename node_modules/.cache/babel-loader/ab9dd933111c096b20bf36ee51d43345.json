{"ast":null,"code":"import _classCallCheck from \"/Users/olesodynets/Documents/Coding/htdocs/card-play/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olesodynets/Documents/Coding/htdocs/card-play/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olesodynets/Documents/Coding/htdocs/card-play/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olesodynets/Documents/Coding/htdocs/card-play/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olesodynets/Documents/Coding/htdocs/card-play/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/olesodynets/Documents/Coding/htdocs/card-play/src/components/Card.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { cardback, cardfront } from '../images';\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.cast = function () {\n      if (_this.props.global.currentTurn === \"BOT_TURN\" || _this.props.isCasted) return;\n\n      _this.props.castCard({\n        value: _this.props.value,\n        sender: \"USER_TARGET\"\n      });\n\n      _this.props.runBot();\n\n      _this.props.clearBoard();\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"part-cards-card\".concat(!this.props.isCasted ? \"\" : \" casted rotated\", \" \").concat(this.props.sender),\n        onClick: this.cast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"part-cards-card-front\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: cardback,\n        className: \"part-cards-card-front-image\",\n        alt: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"part-cards-card-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: cardfront,\n        className: \"part-cards-card-back-image\",\n        alt: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"part-cards-card-back-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.value)));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var global = _ref.global;\n  return {\n    global: global\n  };\n};\n\nvar mapActionsToProps = {\n  castCard: function castCard(payload) {\n    return {\n      type: 'PUSH_CARD_TO_DESK',\n      payload: payload\n    };\n  },\n  runBot: function runBot() {\n    return {\n      type: 'START_BOT_RUNNER',\n      payload: ''\n    };\n  },\n  clearBoard: function clearBoard() {\n    return {\n      type: 'ADAPTIVE_CLEAR_BOARD',\n      payload: ''\n    };\n  }\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Card);","map":{"version":3,"sources":["/Users/olesodynets/Documents/Coding/htdocs/card-play/src/components/Card.js"],"names":["React","Component","connect","cardback","cardfront","Card","cast","props","global","currentTurn","isCasted","castCard","value","sender","runBot","clearBoard","mapStateToProps","mapActionsToProps","payload","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,WAApC;;IAEMC,I;;;;;;;;;;;;;;;;;;UACFC,I,GAAO,YAAM;AACT,UAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,KAAkC,UAAlC,IAAgD,MAAKF,KAAL,CAAWG,QAA9D,EAAwE;;AACxE,YAAKH,KAAL,CAAWI,QAAX,CAAoB;AAChBC,QAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWK,KADF;AAEhBC,QAAAA,MAAM,EAAE;AAFQ,OAApB;;AAIA,YAAKN,KAAL,CAAWO,MAAX;;AACA,YAAKP,KAAL,CAAWQ,UAAX;AACH,K;;;;;;;6BAEQ;AACL,aACI;AACI,QAAA,SAAS,2BAAuB,CAAC,KAAKR,KAAL,CAAWG,QAAb,GAAyB,EAAzB,GAA8B,iBAApD,cAA4E,KAAKH,KAAL,CAAWM,MAAvF,CADb;AAEI,QAAA,OAAO,EAAG,KAAKP,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAGH,QADV;AAEI,QAAA,SAAS,EAAC,6BAFd;AAGI,QAAA,GAAG,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,EAUI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,GAAG,EAAGC,SADN;AAEA,QAAA,SAAS,EAAC,4BAFV;AAGA,QAAA,GAAG,EAAC,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI;AAAM,QAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8C,KAAKG,KAAL,CAAWK,KAAzD,CANJ,CAVJ,CADJ;AAqBH;;;;EAjCcX,S;;AAoCnB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGR,MAAH,QAAGA,MAAH;AAAA,SAAiB;AACrCA,IAAAA,MAAM,EAANA;AADqC,GAAjB;AAAA,CAAxB;;AAIA,IAAMS,iBAAiB,GAAG;AACtBN,EAAAA,QAAQ,EAAE,kBAAAO,OAAO;AAAA,WAAK;AAAEC,MAAAA,IAAI,EAAE,mBAAR;AAA6BD,MAAAA,OAAO,EAAPA;AAA7B,KAAL;AAAA,GADK;AAEtBJ,EAAAA,MAAM,EAAE;AAAA,WAAO;AAAEK,MAAAA,IAAI,EAAE,kBAAR;AAA4BD,MAAAA,OAAO,EAAE;AAArC,KAAP;AAAA,GAFc;AAGtBH,EAAAA,UAAU,EAAE;AAAA,WAAO;AAAEI,MAAAA,IAAI,EAAE,sBAAR;AAAgCD,MAAAA,OAAO,EAAE;AAAzC,KAAP;AAAA;AAHU,CAA1B;AAMA,eAAehB,OAAO,CAClBc,eADkB,EAElBC,iBAFkB,CAAP,CAGbZ,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { cardback, cardfront } from '../images';\n\nclass Card extends Component {\n    cast = () => {\n        if(this.props.global.currentTurn === \"BOT_TURN\" || this.props.isCasted) return;\n        this.props.castCard({\n            value: this.props.value,\n            sender: \"USER_TARGET\"\n        });\n        this.props.runBot();\n        this.props.clearBoard();\n    }\n\n    render() {\n        return(\n            <div\n                className={ `part-cards-card${ (!this.props.isCasted) ? \"\" : \" casted rotated\"  } ${ this.props.sender }` }\n                onClick={ this.cast }>\n                <div className=\"part-cards-card-front\">\n                    <img\n                        src={ cardback }\n                        className=\"part-cards-card-front-image\"\n                        alt=\"card\"\n                    />          \n                </div>\n                <div className=\"part-cards-card-back\">\n                    <img\n                    src={ cardfront }\n                    className=\"part-cards-card-back-image\"\n                    alt=\"card\"\n                    />\n                    <span className=\"part-cards-card-back-mark\">{ this.props.value }</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ global }) => ({\n    global\n});\n\nconst mapActionsToProps = {\n    castCard: payload => ({ type: 'PUSH_CARD_TO_DESK', payload }),\n    runBot: () => ({ type: 'START_BOT_RUNNER', payload: '' }),\n    clearBoard: () => ({ type: 'ADAPTIVE_CLEAR_BOARD', payload: '' })\n}\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(Card);"]},"metadata":{},"sourceType":"module"}